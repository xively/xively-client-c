# Copyright (c) 2003-2016, LogMeIn, Inc. All rights reserved.
#
# This is part of the Xively C Client library,
# it is licensed under the BSD 3-Clause license.

include make/mt-os/mt-os-common

# todo: this is common, move it to outside
XI ?= $(XI_BINDIR)/libxively.a

ifeq ($(XI_HOST_PLATFORM),Linux)
	# linux cross-compilation prerequisite downloads

	XI_CC3200_PATH_CCS_TOOLS ?= $(HOME)/Downloads/xi_artifactory/ti/ccsv6/tools
	XI_CC3200_PATH_SDK ?= $(HOME)/Downloads/xi_artifactory/ti/CC3200SDK_1.2.0/cc3200-sdk

	CC = $(XI_CC3200_PATH_CCS_TOOLS)/compiler/arm_15.12.3.LTS/bin/armcl
	AR = $(XI_CC3200_PATH_CCS_TOOLS)/compiler/arm_15.12.3.LTS/bin/armar

	XI_COMPILER_FLAGS += -I$(XI_CC3200_PATH_CCS_TOOLS)/compiler/arm_15.12.3.LTS/include
	XI_COMPILER_FLAGS += -i"$(XI_CC3200_PATH_CCS_TOOLS)/compiler/arm_15.12.3.LTS/lib"

	XI_BUILD_PRECONDITIONS := $(CC)

$(CC):
	git clone https://github.com/atigyi/xi_artifactory.git ~/Downloads/xi_artifactory
	git -C ~/Downloads/xi_artifactory checkout feature/cc3200_dependencies
	$@ --version

else ifeq ($(XI_HOST_PLATFORM),Darwin)
	# osx cross-compilation downloads

	XI_CC3200_PATH_CCS_TOOLS ?= /Applications/ti/ccsv6/tools
	XI_CC3200_PATH_SDK ?= $(HOME)/ti/CC3200SDK_1.2.0/cc3200-sdk

	CC = $(XI_CC3200_PATH_CCS_TOOLS)/compiler/ti-cgt-arm_15.12.1.LTS/bin/armcl
	AR = $(XI_CC3200_PATH_CCS_TOOLS)/compiler/ti-cgt-arm_15.12.1.LTS/bin/armar

	XI_COMPILER_FLAGS += -I$(XI_CC3200_PATH_CCS_TOOLS)/compiler/ti-cgt-arm_15.12.1.LTS/include
	XI_COMPILER_FLAGS += -i"$(XI_CC3200_PATH_CCS_TOOLS)/compiler/ti-cgt-arm_15.12.1.LTS/lib"

else ifneq (,$(findstring Windows,$(XI_HOST_PLATFORM)))
	 # windows cross-compilation

	XI_CC3200_PATH_CCS_TOOLS ?= C:/ti/ccsv6/tools
	XI_CC3200_PATH_SDK ?= C:/ti/tirex-content/CC3200SDK_1.1.0/cc3200-sdk/

	# COMPILER ?= ti-cgt-arm_16.6.0.STS
	COMPILER ?= arm_15.12.3.LTS

	CC = $(XI_CC3200_PATH_CCS_TOOLS)/compiler/$(COMPILER)/bin/armcl
	AR = $(XI_CC3200_PATH_CCS_TOOLS)/compiler/$(COMPILER)/bin/armar

	XI_COMPILER_FLAGS += -I$(XI_CC3200_PATH_CCS_TOOLS)/compiler/$(COMPILER)/include
	#	XI_COMPILER_FLAGS += -i"$(XI_CC3200_PATH_CCS_TOOLS)/compiler/$(COMPILER)/lib"
endif

# removing these compiler flags since they are not parsed and emit warnings
XI_COMPILER_FLAGS_TMP := $(filter-out -Wall -Werror -Wno-pointer-arith -Wno-format -Wextra -Os -g -O0, $(XI_COMPILER_FLAGS))
XI_COMPILER_FLAGS = $(XI_COMPILER_FLAGS_TMP)

XI_COMPILER_FLAGS += -mv7M4
XI_COMPILER_FLAGS += -me
XI_COMPILER_FLAGS += --define=css
XI_COMPILER_FLAGS += --define=cc3200
XI_COMPILER_FLAGS += --display_error_number
XI_COMPILER_FLAGS += --diag_warning=225
XI_COMPILER_FLAGS += --diag_wrap=off
XI_COMPILER_FLAGS += --abi=eabi
XI_COMPILER_FLAGS += --opt_for_speed=0
XI_COMPILER_FLAGS += --code_state=16
XI_COMPILER_FLAGS += --float_support=vfplib
XI_COMPILER_FLAGS += --preproc_with_compile
XI_COMPILER_FLAGS += --preproc_dependency=$(@:.o=.d)
XI_COMPILER_FLAGS += --obj_directory=$(dir $@)
XI_COMPILER_FLAGS += --asm_directory=$(dir $@)
XI_COMPILER_FLAGS += --output_file=$@

ifneq (,$(findstring release,$(TARGET)))
    XI_COMPILER_FLAGS += -O4
endif

ifneq (,$(findstring debug,$(TARGET)))
    XI_COMPILER_FLAGS += -O0 -g
endif

XI_COMPILER_FLAGS += -I$(XI_CC3200_PATH_SDK)/driverlib
XI_COMPILER_FLAGS += -I$(XI_CC3200_PATH_SDK)/inc
XI_COMPILER_FLAGS += -I$(XI_CC3200_PATH_SDK)/example/common
XI_COMPILER_FLAGS += -I$(XI_CC3200_PATH_SDK)/simplelink/include
XI_COMPILER_FLAGS += -I$(XI_CC3200_PATH_SDK)/simplelink_extlib/provisioninglib

# Xively Client config flags
XI_CONFIG_FLAGS += -DXI_CROSS_TARGET
XI_CONFIG_FLAGS += -DXI_EMBEDDED_TESTS

# wolfssl API
XI_CONFIG_FLAGS += -DNO_WRITEV

XI_ARFLAGS := r $(XI)
XI_LIB_FLAGS := -llibxively.a

XI_POST_COMPILE_ACTION =
